name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Configure Poetry to use in-project venv
        run: poetry config virtualenvs.in-project true

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Install dependencies
        run: poetry install

      - name: Upload source code
        uses: actions/upload-artifact@v3
        with:
          name: source-code
          path: .
          if-no-files-found: error

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download source code
        uses: actions/download-artifact@v3
        with:
          name: source-code

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Configure Poetry to use in-project venv
        run: poetry config virtualenvs.in-project true

      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest -vv tests/